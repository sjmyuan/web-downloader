service: web-downloader

custom:
  host_zone: 'shangjiaming.com.'
  custom_domain: 'downloader.shangjiaming.com'
  certificate_arn: 'arn:aws:acm:us-east-1:851236638881:certificate/6815d229-f240-4582-9471-c587393a91e1'
  job_bucket: "sjmyuan-web-downloader-stg"
  file_bucket: "sjmyuan-video"
  job_prefix: "job"
  subjob_prefix: "subjob"
  etag_prefix: "etags"
  frame_size: 2097152
  stageVariables:
    job_bucket: {self:custom.job_bucket}
    file_bucket: {self:custom.file_bucket}
    job_prefix: {self:custom.job_prefix}
    subjob_prefix: {self:custom.subjob_prefix}
    etag_prefix: {self:custom.etag_prefix}
    frame_size: {self:custom.frame_size}

provider:
  name: aws
  runtime: nodejs6.10
  stage: stg
  region: ap-northeast-2
  timeout: 30
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:ListBucket"
        - "s3:Put*"
        - "s3:GetObject"
      Resource: "*"

functions:
  trigger_job:
    handler: app.trigger_job
    timeout: 15
    events:
      - http:
          path: trigger
          method: post
          cors: true
          private: false
  download:
    handler: app.download
    timeout: 15
    environment:
      job_bucket: {self:custom.job_bucket}
      file_bucket: {self:custom.file_bucket}
      job_prefix: {self:custom.job_prefix}
      subjob_prefix: {self:custom.subjob_prefix}
      etag_prefix: {self:custom.etag_prefix}
    events:
      - s3:
          bucket: {self:custom.job_bucket}
          event: s3:ObjectCreated:*
          rules:
            - prefix: ${self:custom.subjob_prefix}
            - suffix: .json
  check_then_complete:
    handler: app.check_then_complete
    timeout: 15
    environment:
      job_bucket: {self:custom.job_bucket}
      file_bucket: {self:custom.file_bucket}
      job_prefix: {self:custom.job_prefix}
      subjob_prefix: {self:custom.subjob_prefix}
      etag_prefix: {self:custom.etag_prefix}
    events:
      - schedule: rate(60 minutes)
resources:
  Resources:
    myDomainName:
      Type: AWS::ApiGateway::DomainName
      Properties:
        CertificateArn: ${self:custom.certificate_arn}
        DomainName: ${self:custom.custom_domain}
    myMapping:
      Type: AWS::ApiGateway::BasePathMapping
      Properties:
        BasePath: ${self:provider.stage}
        DomainName:
          Ref: myDomainName
        RestApiId:
          Ref: ApiGatewayRestApi
        Stage: ${self:provider.stage}
    myDNSRecord:
      Type: AWS::Route53::RecordSet
      Properties:
        HostedZoneName: ${self:custom.host_zone}
        Comment: DNS name for downloader.
        Name: ${self:custom.custom_domain}
        Type: CNAME
        TTL: 300
        ResourceRecords:
          - Fn::GetAtt:
            - myDomainName
            - DistributionDomainName
plugins:
  - serverless-webpack
  - serverless-plugin-stage-variables
